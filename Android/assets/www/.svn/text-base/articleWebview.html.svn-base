<!DOCTYPE html>
<html>
    <head>
			<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
			<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0"/>
	        <link rel="stylesheet" type="text/css" href="css/base.css"/>
	        <link rel="stylesheet" type="text/css" href="css/sprite.css"/>
	        <link rel="stylesheet" type="text/css" href="css/bar.css"/>
	        <script type="text/javascript" src="js/app.js"></script>
    </head>
    <body>
        <div id="navigationBar" class="ui_elem toolsbar_center_background_pattern">
	        <a href="javascript:;" class="app_pop"><span class="ui_elem backbutton"></span></a>
	        <span class="buttons">
		        <a href="javascript:;" class="like"><span class="ui_elem toolsbar_like_icon"></span><span class="count"></span></a>
		        <a href="javascript:;" class="comment"><span class="ui_elem toolsbar_comment_icon"></span><span class="count"></span></a>
		        <a href="javascript:;" class="share"><span class="ui_elem toolsbar_share_icon"></span></a>
	        </span>
	        <span class="categoryName"></span>
        </div>

		<script type="text/javascript" src="js/zepto.min.js"></script>
		<script type="text/javascript" src="js/utils.storage.js"></script>
        <script type="text/javascript" src="js/nativeBridge/nativeBridge.min.js"></script>
        
        <script>
            
            Zepto(function($){
	            app.articleWebview={
		            currentArticle:{},

		            initPage:function(){
                        var url=utils.storage.getItem('currentArticleUrl');
                        var articleID=utils.storage.getItem('currentArticleID','int');
                        var type=utils.storage.getItem('currentContentType');

			            if (url && type=="article"){
				            nativeBridge.sendEvent('loadUrl',{url:url});
			            }else{
				            nativeBridge.log('error : no url for this article or this is not an article.')
				            nativeBridge.navigate('pop');
			            }
						nativeBridge.sendEvent('getArticle',{articleID:articleID});

		            },
		            setArticle:function(article){
			            app.articleWebview.currentArticle=article;
			            var likeButton=$('a.like')
			            var likeButtonCount=likeButton.find('span.count')
			            likeButtonCount.html(article.nb_likes)
			            if (article.userlike){
				            likeButton.addClass('liked');
				            likeButton.find('.ui_elem').addClass('toolsbar_like_icon_selected');
			            }
			            if (article.nb_comments && article.nb_comments > 0){
				            $('a.comment').find('.ui_elem').addClass('toolsbar_comment_icon_selected');
			            }
			            if (article.categoryName){
				            $('#navigationBar .categoryName').html(article.categoryName);
			            }
			            $('a.comment span.count').html(article.nb_comments)

			            $('a.like').unbind('tap click').on('tap click',function(){
				            app.like(app.articleWebview.currentArticle,$(this));
				            return false;
				        });

			            $('a.share').unbind('tap click').on('tap click',function(){
				            app.share(app.articleWebview.currentArticle,$(this));
				            return false;
				        });

			            $('a.comment').unbind('tap click').on('tap click',function(){
				            var article=app.articleWebview.currentArticle;
				            nativeBridge.navigate('push','article.html','articleCommentsView');
				            return false;
				        });
		            }
	            };

	            nativeBridge.init({
		            //debug:true,
		            storage:true,
		            events:{
			            "showConnect" : app.showConnexionAlert,
		                "setArticle" : function(event){
			                nativeBridge.log('received setArticle ');
			                app.articleWebview.setArticle(event.article)

		                }
		            }
	            });

	            app.initPage();
	            app.articleWebview.initPage();

	            //DEBUG Lines, import debugData.js first
	            //app.articleWebview.setArticle(debugArticle);

	        })

        </script>
        
    </body>
</html>